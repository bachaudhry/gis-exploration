[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "gis-exploration",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "gis-exploration"
    ]
  },
  {
    "objectID": "index.html#developer-guide",
    "href": "index.html#developer-guide",
    "title": "gis-exploration",
    "section": "Developer Guide",
    "text": "Developer Guide\nIf you are new to using nbdev here are some useful pointers to get you started.\n\nInstall gis_exploration in Development mode\n# make sure gis_exploration package is installed in development mode\n$ pip install -e .\n\n# make changes under nbs/ directory\n# ...\n\n# compile to have changes apply to gis_exploration\n$ nbdev_prepare",
    "crumbs": [
      "gis-exploration"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "gis-exploration",
    "section": "Usage",
    "text": "Usage\n\nInstallation\nInstall latest from the GitHub repository:\n$ pip install git+https://github.com/bachaudhry/gis-exploration.git\nor from conda\n$ conda install -c bachaudhry gis_exploration\nor from pypi\n$ pip install gis_exploration\n\n\nDocumentation\nDocumentation can be found hosted on this GitHub repository’s pages. Additionally you can find package manager specific guidelines on conda and pypi respectively.",
    "crumbs": [
      "gis-exploration"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "gis-exploration",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2",
    "crumbs": [
      "gis-exploration"
    ]
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Download and Explore Satellite Imagery Data for Floods",
    "section": "",
    "text": "import random, os, gc, psutil, glob, re, multiprocessing # mem management, parallel processing & file handling\nimport numpy as np\nimport pandas as pd\nfrom time import time\nfrom tqdm.notebook import tqdm # Progress bars\nfrom pathlib import Path\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom joblib import Parallel, delayed\n# Geospatial libraries\nimport rasterio\nfrom rasterio.plot import show\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport folium\nfrom pyproj import CRS #python interface to PROJ (cartographic projections and coordinate transformations lib)\n# Image Processing\nfrom skimage import exposure, filters, morphology\nimport cv2\nimport warnings \nwarnings.filterwarnings('ignore')",
    "crumbs": [
      "**Download and Explore Satellite Imagery Data for Floods**"
    ]
  },
  {
    "objectID": "data.html#sen1floods11",
    "href": "data.html#sen1floods11",
    "title": "Download and Explore Satellite Imagery Data for Floods",
    "section": "Sen1Floods11",
    "text": "Sen1Floods11\nThis data’s citation is: &gt; Bonafilia, D., Tellman, B., Anderson, T., Issenberg, E. 2020. Sen1Floods11: a georeferenced dataset to train and test deep learning flood algorithms for Sentinel-1. The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) Workshops, 2020, pp. 210-211.\nThe paper is available via open access\nThe GCS bucket is split into subfolders containing data, checkpoints, training/testing splits and a STAC compliant catalogue.\nFor additional details on how the data is structured and what is represented in the meta data, head over to the github repo\n\npath_data1 = Path('/home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data')\n\n\n!ls -l /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/\n\ntotal 10256\n-rw-r--r-- 1 ba_ch ba_ch    14092 Oct 15  2020 Sen1Floods11_Metadata.geojson\ndrwxr-xr-x 6 ba_ch ba_ch     4096 Mar 10 16:03 catalog\n-rw-r--r-- 1 ba_ch ba_ch 10467733 Oct 15  2020 catalog.zip\ndrwxr-xr-x 2 ba_ch ba_ch     4096 Mar 10 16:31 checkpoints\ndrwxr-xr-x 4 ba_ch ba_ch     4096 Mar 10 18:16 data\ndrwxr-xr-x 4 ba_ch ba_ch     4096 Mar 10 18:19 splits\n\n\nCreating functions to explore the dataset structure. I’ll work on ensuring that the function runs as expected before refactoring and chucking it into a class.\nRun simplified function with debug prints.\n\ndef simple_check(root_dir):\n    root_dir = str(root_dir)\n    print(f\"Checking directory: {root_dir}\")\n    if not os.path.exists(root_dir):\n        print(f\"Path doesn't exist: {root_dir}\")\n        return False\n\n    file_count = 0\n    for dirpath, dirnames, filenames in os.walk(root_dir):\n        file_count += len(filenames)\n        print(f\"Found directory: {dirpath} with {len(filenames)} files\")\n        if len(filenames) &gt; 0: print(f\"Sample file: {filenames[0]}\")\n\n    print(f\"Total files found: {file_count}\")\n    return file_count &gt; 0\n\n\nsimple_check(path_data1)\n\nChecking directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data with 0 files\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events with 0 files\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled with 0 files\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled/LabelHand with 446 files\nSample file: Sri-Lanka_321316_LabelHand.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled/JRCWaterHand with 446 files\nSample file: India_747992_JRCWaterHand.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled/S1OtsuLabelHand with 446 files\nSample file: Spain_2523247_S1OtsuLabelHand.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled/S2Hand with 446 files\nSample file: Spain_2594119_S2Hand.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/HandLabeled/S1Hand with 446 files\nSample file: India_103447_S1Hand.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/WeaklyLabeled with 0 files\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/WeaklyLabeled/S2IndexLabelWeak with 4385 files\nSample file: Paraguay_8435789_S2IndexLabelWeak.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/WeaklyLabeled/S1Weak with 4384 files\nSample file: USA_6224033_S1Weak.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/WeaklyLabeled/S2Weak with 4384 files\nSample file: Colombia_3229730_S2Weak.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/flood_events/WeaklyLabeled/S1OtsuLabelWeak with 4384 files\nSample file: Mekong_3211831_S1OtsuLabelWeak.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/perm_water with 0 files\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/perm_water/S1Perm with 814 files\nSample file: sentinel_1_152_rural_156.5748410406182_-8.001183516149558.tif\nFound directory: /home/ba_ch/nbs/gis-exploration/data/downloads/v1.1/data/perm_water/JRCPerm with 814 files\nSample file: water_2_537_inhabited_-61.26831602040957_13.200076188968426.tif\nTotal files found: 21395\n\n\nTrue\n\n\n21395 checks out after manual confirmation. Lets flesh out this function.\n\ndef explore_data(root_dir):\n    \"\"\"\n    Explore the structure of the Sen1Floods11 dataset, handling multiple levels of folders\n    and subfolders.\n    \"\"\"\n    root_dir = str(root_dir)\n    if not os.path.exists(root_dir):\n        print(f\"Error: Path {root_dir} does not exist\")\n        return {}\n        \n    dataset_info = {\n        'total_size_gb': 0,\n        'num_files' : 0,\n        'file_types': {},\n        'folders': {},\n        'subfolders_structure': {},\n        'tiff_stats': {\n            'dimensions': [],\n            'bands_count': {},\n            'crs_types': {}\n        },\n    }\n\n    # Walk through directories and files\n    for dirpath, dirnames, filenames in os.walk(root_dir):\n        rel_path = os.path.relpath(dirpath, root_dir)\n        if rel_path == '.':\n            rel_path = 'root'\n        \n        # Parse folder structure\n        path_parts = rel_path.split(os.sep)\n        current_level = dataset_info['subfolders_structure']\n        \n        # Nested folder dictionary\n        if rel_path != 'root':\n            for i, part in enumerate(path_parts):\n                if part not in current_level:\n                    current_level[part] = {'files': 0, 'size_mb': 0, 'subfolders': {}}\n                if i &lt; len(path_parts) - 1 :\n                    current_level = current_level[part]['subfolders']\n                else:\n                    current_folder = current_level[part]\n        else: current_folder = dataset_info['subfolders_structure']\n        \n        # Add folder info\n        dataset_info['folders'][rel_path] = {\n            'num_files': len(filenames),\n            'size_mb': 0,\n            'file_types': {},\n        }\n        # Process files\n        for filename in filenames:\n            filepath = os.path.join(dirpath, filename)\n            try: # added additional exception handling \n                file_size = os.path.getsize(filepath) / (1024*1024) # result in MBs\n            except (FileNotFoundError, PermissionError) as e: \n                print(f\"Error accessing {filepath}: {e}\")\n                continue\n            \n            # Update dataset info\n            dataset_info['num_files'] += 1\n            dataset_info['total_size_gb'] += file_size / 1024\n            dataset_info['folders'][rel_path]['size_mb'] += file_size\n\n            # Update the nested structure of folders\n            if rel_path != 'root':\n                current_folder['files'] += 1\n                current_folder['size_mb'] += file_size\n            \n            # Track file types\n            file_ext = os.path.splitext(filename)[1].lower()\n            if file_ext not in dataset_info['file_types']:\n                dataset_info['file_types'][file_ext] = {'count': 0, 'size_mb': 0}\n            dataset_info['file_types'][file_ext]['count'] += 1\n            dataset_info['file_types'][file_ext]['size_mb'] += file_size\n\n            # Track file types per folder\n            if file_ext not in dataset_info['folders'][rel_path]['file_types']:\n                dataset_info['folders'][rel_path]['file_types'][file_ext] = 0\n            dataset_info['folders'][rel_path]['file_types'][file_ext] += 1\n    \n            # Get info on TIFF files (limited sample)\n            if file_ext in ['.tif', '.tiff']:\n                try:\n                    with rasterio.open(filepath) as src:\n                        if len(dataset_info['tiff_stats']['dimensions']) &lt; 10: # Sample upto 10\n                            dataset_info['tiff_stats']['dimensions'].append({\n                                'file': os.path.relpath(filepath, root_dir),\n                                'width': src.width,\n                                'height': src.height,\n                                'count': src.count,\n                                'crs': str(src.crs),\n                                'transform': str(src.transform),\n                                'size_mb': file_size\n                            })\n                        # Track band counts\n                        band_count = src.count\n                        if band_count not in dataset_info['tiff_stats']['bands_count']:\n                            dataset_info['tiff_stats']['bands_count'][band_count] = 0\n                        dataset_info['tiff_stats']['bands_count'][band_count] += 1\n                        \n                        # Track CRS types\n                        crs_str = str(src.crs)\n                        if crs_str not in dataset_info['tiff_stats']['crs_types']:\n                            dataset_info['tiff_stats']['crs_types'][crs_str] = 0\n                        dataset_info['tiff_stats']['crs_types'][crs_str] += 1   \n                except Exception as e: print(f\"Error reading {filepath}: {e}\")\n    # Round the total size, folder sizes and file type sizes\n    dataset_info['total_size_gb'] = round(dataset_info['total_size_gb'], 2)\n    for folder in dataset_info['folders']:\n        dataset_info['folders'][folder]['size_mb'] = round(dataset_info['folders'][folder]['size_mb'], 2)\n    for file_type in dataset_info['file_types']:\n        dataset_info['file_types'][file_type]['size_mb'] = round(dataset_info['file_types'][file_type]['size_mb'], 2)\n\n    return dataset_info\n\n\nexplore_data(path_data1)\n\n{'total_size_gb': 33.81,\n 'num_files': 21395,\n 'file_types': {'.tif': {'count': 21394, 'size_mb': 34621.66},\n  '': {'count': 1, 'size_mb': 0.01}},\n 'folders': {'root': {'num_files': 0, 'size_mb': 0, 'file_types': {}},\n  'flood_events': {'num_files': 0, 'size_mb': 0, 'file_types': {}},\n  'flood_events/HandLabeled': {'num_files': 0, 'size_mb': 0, 'file_types': {}},\n  'flood_events/HandLabeled/LabelHand': {'num_files': 446,\n   'size_mb': 2.44,\n   'file_types': {'.tif': 446}},\n  'flood_events/HandLabeled/JRCWaterHand': {'num_files': 446,\n   'size_mb': 0.49,\n   'file_types': {'.tif': 446}},\n  'flood_events/HandLabeled/S1OtsuLabelHand': {'num_files': 446,\n   'size_mb': 1.63,\n   'file_types': {'.tif': 446}},\n  'flood_events/HandLabeled/S2Hand': {'num_files': 446,\n   'size_mb': 971.42,\n   'file_types': {'.tif': 446}},\n  'flood_events/HandLabeled/S1Hand': {'num_files': 446,\n   'size_mb': 695.7,\n   'file_types': {'.tif': 446}},\n  'flood_events/WeaklyLabeled': {'num_files': 0,\n   'size_mb': 0,\n   'file_types': {}},\n  'flood_events/WeaklyLabeled/S2IndexLabelWeak': {'num_files': 4385,\n   'size_mb': 31.47,\n   'file_types': {'.tif': 4384, '': 1}},\n  'flood_events/WeaklyLabeled/S1Weak': {'num_files': 4384,\n   'size_mb': 6983.46,\n   'file_types': {'.tif': 4384}},\n  'flood_events/WeaklyLabeled/S2Weak': {'num_files': 4384,\n   'size_mb': 24501.7,\n   'file_types': {'.tif': 4384}},\n  'flood_events/WeaklyLabeled/S1OtsuLabelWeak': {'num_files': 4384,\n   'size_mb': 17.31,\n   'file_types': {'.tif': 4384}},\n  'perm_water': {'num_files': 0, 'size_mb': 0, 'file_types': {}},\n  'perm_water/S1Perm': {'num_files': 814,\n   'size_mb': 1410.32,\n   'file_types': {'.tif': 814}},\n  'perm_water/JRCPerm': {'num_files': 814,\n   'size_mb': 5.72,\n   'file_types': {'.tif': 814}}},\n 'subfolders_structure': {'flood_events': {'files': 0,\n   'size_mb': 0,\n   'subfolders': {'HandLabeled': {'files': 0,\n     'size_mb': 0,\n     'subfolders': {'LabelHand': {'files': 446,\n       'size_mb': 2.4355697631835938,\n       'subfolders': {}},\n      'JRCWaterHand': {'files': 446,\n       'size_mb': 0.4912405014038086,\n       'subfolders': {}},\n      'S1OtsuLabelHand': {'files': 446,\n       'size_mb': 1.6329212188720703,\n       'subfolders': {}},\n      'S2Hand': {'files': 446, 'size_mb': 971.4201326370239, 'subfolders': {}},\n      'S1Hand': {'files': 446,\n       'size_mb': 695.7015371322632,\n       'subfolders': {}}}},\n    'WeaklyLabeled': {'files': 0,\n     'size_mb': 0,\n     'subfolders': {'S2IndexLabelWeak': {'files': 4385,\n       'size_mb': 31.47349739074707,\n       'subfolders': {}},\n      'S1Weak': {'files': 4384,\n       'size_mb': 6983.455281257629,\n       'subfolders': {}},\n      'S2Weak': {'files': 4384,\n       'size_mb': 24501.70032596588,\n       'subfolders': {}},\n      'S1OtsuLabelWeak': {'files': 4384,\n       'size_mb': 17.312772750854492,\n       'subfolders': {}}}}}},\n  'perm_water': {'files': 0,\n   'size_mb': 0,\n   'subfolders': {'S1Perm': {'files': 814,\n     'size_mb': 1410.3182640075684,\n     'subfolders': {}},\n    'JRCPerm': {'files': 814,\n     'size_mb': 5.719854354858398,\n     'subfolders': {}}}}},\n 'tiff_stats': {'dimensions': [{'file': 'flood_events/HandLabeled/LabelHand/Sri-Lanka_321316_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 81.50|\\n| 0.00,-0.00, 8.00|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.006531715393066406},\n   {'file': 'flood_events/HandLabeled/LabelHand/Sri-Lanka_233609_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 81.09|\\n| 0.00,-0.00, 7.86|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.0037832260131835938},\n   {'file': 'flood_events/HandLabeled/LabelHand/Nigeria_984831_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 5.75|\\n| 0.00,-0.00, 8.88|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.009843826293945312},\n   {'file': 'flood_events/HandLabeled/LabelHand/Mekong_922373_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 105.97|\\n| 0.00,-0.00, 12.23|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.015026092529296875},\n   {'file': 'flood_events/HandLabeled/LabelHand/Paraguay_205585_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00,-56.80|\\n| 0.00,-0.00,-24.42|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.0009679794311523438},\n   {'file': 'flood_events/HandLabeled/LabelHand/Paraguay_148318_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00,-56.30|\\n| 0.00,-0.00,-23.92|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.0031185150146484375},\n   {'file': 'flood_events/HandLabeled/LabelHand/Sri-Lanka_551926_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 81.45|\\n| 0.00,-0.00, 8.00|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.003987312316894531},\n   {'file': 'flood_events/HandLabeled/LabelHand/USA_527077_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00,-95.25|\\n| 0.00,-0.00, 38.59|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.0017709732055664062},\n   {'file': 'flood_events/HandLabeled/LabelHand/India_324254_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00, 93.32|\\n| 0.00,-0.00, 26.03|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.003131866455078125},\n   {'file': 'flood_events/HandLabeled/LabelHand/USA_348639_LabelHand.tif',\n    'width': 512,\n    'height': 512,\n    'count': 1,\n    'crs': 'EPSG:4326',\n    'transform': '| 0.00, 0.00,-94.98|\\n| 0.00,-0.00, 39.00|\\n| 0.00, 0.00, 1.00|',\n    'size_mb': 0.004900932312011719}],\n  'bands_count': {1: 10920, 13: 4830, 2: 5644},\n  'crs_types': {'EPSG:4326': 21394}}}",
    "crumbs": [
      "**Download and Explore Satellite Imagery Data for Floods**"
    ]
  }
]